/*
 * Copyright (c) 2021. Christopher D. Wade
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

apply plugin: 'java'
apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: 'jacoco'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.wade.app'
version = '1.2.0'
sourceCompatibility = '15'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    compile 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    
    compile 'log4j:log4j:1.2.17'
	compile 'commons-logging:commons-logging:1.2'
    compile("org.apache.commons:commons-lang3:3.7")
    compile("org.apache.commons:commons-collections4:4.1")
    compile("com.googlecode.combinatoricslib:combinatoricslib:2.1")
    compile("org.javassist:javassist:3.22.0-GA")
    compile("commons-io:commons-io:2.6")

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16' 
    testCompile("org.apache.commons:commons-lang3:3.7")
    testCompile("com.googlecode.combinatoricslib:combinatoricslib:2.1")
    testCompile("org.javassist:javassist:3.22.0-GA")
    testCompile("com.googlecode.combinatoricslib:combinatoricslib:2.1")
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.0'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.3.0'
    testCompile 'org.junit.platform:junit-platform-commons:1.7.0'
    testCompile 'org.junit.platform:junit-platform-engine:1.7.0'
    testCompile "org.junit.platform:junit-platform-runner:1.7.0"
    testCompile 'org.mockito:mockito-junit-jupiter:2.22.0'
    testCompile 'org.assertj:assertj-core:3.9.1'
    testCompile 'org.powermock:powermock-api-mockito2:2.0.2'
}

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/jacoco")
}

jar {
  manifest {
    attributes(
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'com.wade.pojotester.PojoVerifier'
    )
  }
}

shadowJar {
    baseName = 'pojo-tester-all'
    classifier = null
}

publishing {
  publications {
    shadow(MavenPublication) {
	  from components.java
      artifact shadowJar
    }
  }
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}